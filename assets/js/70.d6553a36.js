(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{397:function(s,e,t){"use strict";t.r(e);var a=t(4),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("团队项目开发中，遵循一个合理、清晰的 Git 使用流程，是非常重要的。之前写了一篇文章"),t("a",{attrs:{href:"https://blog.bingo.ren/5.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("《Git 分支管理》"),t("OutboundLink")],1),s._v("，说到 Git 分支管理是一门艺术，但其实想要合理规范 Git 的使用，可以讨论的地方还有很多。前阵子跟我们公司的后台同事讨论到 commit 合并的问题。由 fio 说到的 rebase，以及我使用 GUI - GitHub Desktop 的时候发现的 Undo，在此做一篇关于合并提交的总结。")]),s._v(" "),t("h2",{attrs:{id:"合并-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并-commit"}},[s._v("#")]),s._v(" 合并 Commit")]),s._v(" "),t("h3",{attrs:{id:"为什么需要合并-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要合并-commit"}},[s._v("#")]),s._v(" 为什么需要合并 Commit")]),s._v(" "),t("p",[s._v("其实这种需求很常见，假设你刚刚添加了一个新功能，commit 了，还没 Push。此时，你发现了一个小 Bug，然后修复了它，又commit了。过了一会，你又发现另外一个 Bug，于是你又修复了它，然后又 commit了。此时，在你Push之前，已经有3个 commit了。")]),s._v(" "),t("p",[s._v("如果你想要让远程仓库的项目网络“好看”，即简洁明了，每个 commit 都有它的意义。那么就应该把这3个 commit 合并后，再 Push。否则如果这种随便 commit 然后就 Push 的现象越来越多，会导致项目网络上面的提交信息可读性很差，还会让项目经理 Get 不到点。像我们团队的项目网络经常会看到像这样的提交信息：“小修复”、“改了一点小东西” ...")]),s._v(" "),t("h3",{attrs:{id:"方式一、rebase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方式一、rebase"}},[s._v("#")]),s._v(" 方式一、rebase")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git rebase -i origin/master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("git rebase 命令的 i 参数表示互动（interactive），这时 git 会打开一个互动界面，进行下一步操作。")]),s._v(" "),t("p",[s._v("下面采用 "),t("a",{attrs:{href:"https://robots.thoughtbot.com/git-interactive-rebase-squash-amend-rewriting-history",target:"_blank",rel:"noopener noreferrer"}},[s._v("Tute Costa"),t("OutboundLink")],1),s._v(" 的例子，来解释怎么合并 commit。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('pick 07c5abd Introduce OpenPGP and teach basic usage\npick de9b1eb Fix PostChecker::Post#urls\npick 3e7ee36 Hey kids, stop all the highlighting\npick fa20af3 git interactive rebase, squash, amend\n\n# Rebase 8db7e8b..fa20af3 onto 8db7e8b\n#\n# Commands:\n#  p, pick = use commit\n#  r, reword = use commit, but edit the commit message\n#  e, edit = use commit, but stop for amending\n#  s, squash = use commit, but meld into previous commit\n#  f, fixup = like "squash", but discard this commit\'s log message\n#  x, exec = run command (the rest of the line) using shell\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT commit WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("上面的互动界面，先列出当前分支最新的4个 commit（越下面越新）。每个 commit 前面有一个操作命令，默认是 pick，表示该行 commit 被选中，要进行 rebase 操作。")]),s._v(" "),t("p",[s._v("4个 commit 的下面是一大堆注释，列出可以使用的命令。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("命令")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("pick")]),s._v(" "),t("td",[s._v("正常选中")])]),s._v(" "),t("tr",[t("td",[s._v("reword")]),s._v(" "),t("td",[s._v("选中，并且修改提交信息")])]),s._v(" "),t("tr",[t("td",[s._v("edit")]),s._v(" "),t("td",[s._v("选中，rebase时会暂停，允许你修改这个commit（参考"),t("a",{attrs:{href:"https://git-scm.com/book/en/v2",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),t("OutboundLink")],1),s._v("）")])]),s._v(" "),t("tr",[t("td",[s._v("squash")]),s._v(" "),t("td",[s._v("选中，会将当前commit与上一个commit合并")])]),s._v(" "),t("tr",[t("td",[s._v("fixup")]),s._v(" "),t("td",[s._v("与squash相同，但不会保存当前commit的提交信息")])]),s._v(" "),t("tr",[t("td",[s._v("exec")]),s._v(" "),t("td",[s._v("执行其他shell命令")])])])]),s._v(" "),t("p",[s._v("上面这6个命令当中，squash 和 fixup 可以用来合并 commit。先把需要合并的 commit 前面的动词，改成 squash（或者s）。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("pick 07c5abd Introduce OpenPGP and teach basic usage\ns de9b1eb Fix PostChecker::Post#urls\ns 3e7ee36 Hey kids, stop all the highlighting\npick fa20af3 git interactive rebase, squash, amend\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("这样一改，执行后，当前分支只会剩下两个 commit。第二行和第三行的 commit，都会合并到第一行的 commit。提交信息会同时包含，这三个 commit 的提交信息。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# This is a combination of 3 commits.\n# The first commit's message is:\nIntroduce OpenPGP and teach basic usage\n\n# This is the 2nd commit message:\nFix PostChecker::Post#urls\n\n# This is the 3rd commit message:\nHey kids, stop all the highlighting\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("如果将第三行的 squash 命令改成 fixup 命令。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("pick 07c5abd Introduce OpenPGP and teach basic usage\ns de9b1eb Fix PostChecker::Post#urls\nf 3e7ee36 Hey kids, stop all the highlighting\npick fa20af3 git interactive rebase, squash, amend\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("运行结果相同，还是会生成两个 commit，第二行和第三行的 commit，都合并到第一行的 commit。但是，新的提交信息里面，第三行 commit 的提交信息，会被注释掉。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# This is a combination of 3 commits.\n# The first commit's message is:\nIntroduce OpenPGP and teach basic usage\n\n# This is the 2nd commit message:\nFix PostChecker::Post#urls\n\n# This is the 3rd commit message:\n# Hey kids, stop all the highlighting\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("这也是就是 fio 所提出的问题：如果我不想让别人看到我合并的 commit 的提交信息怎么办？")]),s._v(" "),t("p",[s._v("回答：用 fixup (f)")]),s._v(" "),t("h3",{attrs:{id:"方式二、-undo-reset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方式二、-undo-reset"}},[s._v("#")]),s._v(" 方式二、“Undo” - reset")]),s._v(" "),t("p",[s._v("在 GitHub Desktop 这个客户端上，有个明显的 Undo 按钮，作用是撤销该 commit。平时在上述情景的时候，我都会使用 Undo，然后再重新 commit。那么原理是什么？")]),s._v(" "),t("p",[s._v("另外一种合并 commit 的简便方法，就是先撤销之前的 commit，然后再建一个新的 commit。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git reset HEAD~n \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("n 是撤销的 commit 的个数，假如上述情景要撤销 5 个commit，eg.")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('$ git reset HEAD~5 \n$ git add .\n$ git commit -am "Here\'s the bug fix that closes #28"\n$ git push --force\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("而 GitHub Desktop 的 Undo，其实就是每点一下执行一个reset，仅此而已。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git reset HEAD~1 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"补充"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[s._v("#")]),s._v(" 补充")]),s._v(" "),t("p",[s._v("squash 和 fixup 命令，还可以当作命令行参数使用，自动合并 commit。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git commit --fixup  \n$ git rebase -i --autosquash \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),t("p",[t("a",{attrs:{href:"http://fle.github.io/git-tip-keep-your-branch-clean-with-fixup-and-autosquash.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("\nGIT tip : Keep your branch clean with fixup and autosquash"),t("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);