(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{388:function(s,a,t){"use strict";t.r(a);var e=t(4),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("终于买了黑苹果主机，拿来当 MacOS 服务器了，主要用于移动端的持续构建。接下来我会先安装环境，然后安装必要的软件，接着做内网穿透，最后搭建 Jenkins 环境。这篇文章就记录一下，从一台出厂的黑苹果主机到拥有可持续构建环境的服务器的过程。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/blog/57/iMac.png",alt:"iMac"}})]),s._v(" "),t("h2",{attrs:{id:"安装环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装环境"}},[s._v("#")]),s._v(" 安装环境")]),s._v(" "),t("h3",{attrs:{id:"homebrew"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homebrew"}},[s._v("#")]),s._v(" Homebrew")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ ruby -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"rvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rvm"}},[s._v("#")]),s._v(" RVM")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L get.rvm.io "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -s stable\n$ rvm "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新Ruby")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"openssl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#openssl"}},[s._v("#")]),s._v(" OpenSSL")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openssl\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 homebrew 安装的 openssl 代替系统自带的")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s -f /usr/local/Cellar/openssl/1.0.2l/bin/openssl /usr/bin/openssl \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" Nginx")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" nginx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"jenkins"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins"}},[s._v("#")]),s._v(" Jenkins")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" jenkins\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"java-jdk8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-jdk8"}},[s._v("#")]),s._v(" Java JDK8")]),s._v(" "),t("p",[s._v("去官网下载，直接安装，无须手动配置环境变量等。")]),s._v(" "),t("h3",{attrs:{id:"maven"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven"}},[s._v("#")]),s._v(" Maven")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" maven\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[s._v("#")]),s._v(" MySQL")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" mysql\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"tomcat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tomcat"}},[s._v("#")]),s._v(" Tomcat")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" tomcat\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"bundler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bundler"}},[s._v("#")]),s._v(" Bundler")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gem "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -n /usr/local/bin bundler\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"cocoapods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cocoapods"}},[s._v("#")]),s._v(" CocoaPods")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更换Ruby镜像，移除现有的Ruby镜像")]),s._v("\n$ gem sources --remove https://rubygems.org/\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加国内最新镜像源（淘宝的Ruby镜像已经不更新了）")]),s._v("\n$ gem sources -a https://gems.ruby-china.org/\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gem "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -n /usr/local/bin cocoapods\n$ pod setup\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"fastlane"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fastlane"}},[s._v("#")]),s._v(" Fastlane")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gem "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -n /usr/local/bin fastlane\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"fir-cli"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fir-cli"}},[s._v("#")]),s._v(" Fir-cli")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gem "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -n /usr/local/bin fir-cli\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"xcode-select"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xcode-select"}},[s._v("#")]),s._v(" Xcode-select")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ xcode-select --install\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"gradle"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gradle"}},[s._v("#")]),s._v(" Gradle")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gradle\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("发现下载的是最新的4.1版，而目前项目却需要3.3版。")]),s._v(" "),t("p",[s._v("解决办法：去 https://services.gradle.org/distributions/ 下载合适的版本。\n我下了 "),t("a",{attrs:{href:"https://downloads.gradle.org/distributions/gradle-3.3-all.zip",target:"_blank",rel:"noopener noreferrer"}},[s._v("3.3-all"),t("OutboundLink")],1),s._v(" 的版本，最后将解压后的文件放到 "),t("code",[s._v("/usr/local/Cellar/gradle/")]),s._v(" 即可。")]),s._v(" "),t("p",[s._v("还有另外一种最方便的指定版本下载的方法是用 sdkman：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s https://get.sdkman.io "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n$ sdk "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gradle "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.3")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("不过我还是希望尽可能全都使用 Homebrew 去管理环境依赖，所以就还是用上面的方法。")]),s._v(" "),t("h2",{attrs:{id:"安装软件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装软件"}},[s._v("#")]),s._v(" 安装软件")]),s._v(" "),t("ul",[t("li",[s._v("Xcode")]),s._v(" "),t("li",[s._v("TeamViewer")])]),s._v(" "),t("p",[s._v("Xcode 是 iOS 构建必须要有的软件，而 TeamViewer 其实可有可无，我把它作为最后一道防线，当 frp 的隧道因为某种特殊原因断开的时候，可以远程连上服务器，去查看问题并解决。")]),s._v(" "),t("h2",{attrs:{id:"内网穿透"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内网穿透"}},[s._v("#")]),s._v(" 内网穿透")]),s._v(" "),t("p",[s._v("使用 frp，下载 MacOS 平台对应的 Release 包：\n"),t("a",{attrs:{href:"https://github.com/fatedier/frp/releases/download/v0.13.0/frp_0.13.0_darwin_amd64.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/fatedier/frp/releases/download/v0.13.0/frp_0.13.0_darwin_amd64.tar.gz"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("关于 frp 的配置，可以看我之前写的一篇文章："),t("a",{attrs:{href:"https://blog.bingo.ren/55.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("《frp端口映射穿透内网》"),t("OutboundLink")],1),s._v("，这里就不多说了。")]),s._v(" "),t("h2",{attrs:{id:"搭建jenkins"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建jenkins"}},[s._v("#")]),s._v(" 搭建Jenkins")]),s._v(" "),t("h3",{attrs:{id:"启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),t("h4",{attrs:{id:"手动启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手动启动"}},[s._v("#")]),s._v(" 手动启动")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ java -jar jenkins.war \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"后台运行（指定端口）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后台运行（指定端口）"}},[s._v("#")]),s._v(" 后台运行（指定端口）")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" java -jar jenkins.war -httpPort"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8888")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"设置开机自启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置开机自启动"}},[s._v("#")]),s._v(" 设置开机自启动")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" launchctl load -w /Library/LaunchDaemons/org.jenkins-ci.plist \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"取消开机自启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#取消开机自启动"}},[s._v("#")]),s._v(" 取消开机自启动")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" launchctl unload -w /Library/LaunchDaemons/org.jenkins-ci.plist \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"管理插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#管理插件"}},[s._v("#")]),s._v(" 管理插件")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("插件")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("Xcode integration")]),s._v(" "),t("td",[s._v("iOS专用")])]),s._v(" "),t("tr",[t("td",[s._v("Keychains and Provisioning Profiles Management")]),s._v(" "),t("td",[s._v("签名证书管理插件")])]),s._v(" "),t("tr",[t("td",[s._v("Hudson Post build task")]),s._v(" "),t("td",[s._v("脚本插件")])]),s._v(" "),t("tr",[t("td",[s._v("build-name-setter")]),s._v(" "),t("td",[s._v("修改Build名称")])]),s._v(" "),t("tr",[t("td",[s._v("description setter plugin")]),s._v(" "),t("td",[s._v("修改Build描述(二维码)")])]),s._v(" "),t("tr",[t("td",[s._v("Git Changelog")]),s._v(" "),t("td",[s._v("获取git仓库提交的信息")])]),s._v(" "),t("tr",[t("td",[s._v("Environment Injector Plugin")]),s._v(" "),t("td",[s._v("自定义全局变量")])]),s._v(" "),t("tr",[t("td",[s._v("Email Extension Template Plugin")]),s._v(" "),t("td",[s._v("自定义邮件插件")])]),s._v(" "),t("tr",[t("td",[s._v("Cobertura Plug")]),s._v(" "),t("td",[s._v("显示代码测试覆盖率报表")])]),s._v(" "),t("tr",[t("td",[s._v("Junit Plugin")]),s._v(" "),t("td",[s._v("展示生成的单元测试报表，支持一切单测框架，如 junit、nosetests 等")])])])]),s._v(" "),t("h3",{attrs:{id:"系统设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#系统设置"}},[s._v("#")]),s._v(" 系统设置")]),s._v(" "),t("p",[s._v("选择 系统管理 - 系统设置，进入系统设置界面，可以管理全局属性、配置邮件通知。")]),s._v(" "),t("h4",{attrs:{id:"添加环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加环境变量"}},[s._v("#")]),s._v(" 添加环境变量")]),s._v(" "),t("p",[s._v("全局属性下面，勾选 "),t("code",[s._v("Environment variables")]),s._v("，增加以下键值对。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("Key")]),s._v(" "),t("th",[s._v("Value")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("LANG")]),s._v(" "),t("td",[s._v("zh_CN.UTF-8")])]),s._v(" "),t("tr",[t("td",[s._v("PATH")]),s._v(" "),t("td",[s._v("/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin （终端中执行 echo $PATH 命令的输出）")])]),s._v(" "),t("tr",[t("td",[s._v("ANDROID_HOME")]),s._v(" "),t("td",[s._v("/Users/bingo/Library/Android/sdk （安卓sdk目录）")])])])]),s._v(" "),t("h4",{attrs:{id:"配置ssh密钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置ssh密钥"}},[s._v("#")]),s._v(" 配置SSH密钥")]),s._v(" "),t("ul",[t("li",[s._v("生成服务器 SSH 公私钥")]),s._v(" "),t("li",[s._v("把公钥部署到 Coding 项目或者个人公钥上")])]),s._v(" "),t("h3",{attrs:{id:"构建项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建项目"}},[s._v("#")]),s._v(" 构建项目")]),s._v(" "),t("h4",{attrs:{id:"新建项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建项目"}},[s._v("#")]),s._v(" 新建项目")]),s._v(" "),t("p",[s._v("一般选择自由风格，JavaEE 则选择 Maven 项目。")]),s._v(" "),t("h4",{attrs:{id:"源码管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源码管理"}},[s._v("#")]),s._v(" 源码管理")]),s._v(" "),t("p",[s._v("使用 Git，最好用 ssh 地址，因为老版本的 git 可能还不支持 HTTPS，需要升级 git 版本。直接使用 ssh 地址，Credentials 选刚保存的私钥即可。")]),s._v(" "),t("p",[s._v("Branch Specifier 选定一条分支，最好确定一条分支是专门构建发布的，配合 git flow，例如 build 或者 release 分支。")]),s._v(" "),t("h4",{attrs:{id:"构建触发器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建触发器"}},[s._v("#")]),s._v(" 构建触发器")]),s._v(" "),t("p",[s._v("先不管 webhook，直接 Poll SCM，轮训，日程表设置"),t("code",[s._v("* * * * *")]),s._v("，代表1分钟轮训一次，如果有新的 commit，就触发构建。")]),s._v(" "),t("h4",{attrs:{id:"构建环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建环境"}},[s._v("#")]),s._v(" 构建环境")]),s._v(" "),t("p",[s._v("下面演示一下 iOS 的构建配置。")]),s._v(" "),t("p",[s._v("原本 iOS 需要选 Keychains and Code Signing Identities 和 Mobile Provisioning Profiles，但是我最讨厌的就是这些繁琐的配置，之前还因为这些步骤拒绝使用 Jenkins。没错，我现在依然是拒绝的，签名依然不用 Jenkins 来做，由 fastlane 来完成。")]),s._v(" "),t("p",[s._v("所以，这一步，"),t("strong",[s._v("直接跳过")]),s._v("。")]),s._v(" "),t("h4",{attrs:{id:"构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建"}},[s._v("#")]),s._v(" 构建")]),s._v(" "),t("p",[s._v("增加构建步骤，选择 Execute shell，在 Command 中，执行 fastlane 打包脚本。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\nbundle update\nbundle "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" fastlane adhoc\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("由于我打包的任务都已经由 fastlane 的 gym 去完成，签名也由 fastlane 的 sign 去完成，所以不需要使用 Jenkins 的 Xcode 的插件。")]),s._v(" "),t("p",[s._v("上传内测包分发的脚本也放在 fastlane 里，是在 fastlane 里执行了 fir-cli 的上传命令，所以也不需要使用 Jenkins 的 fir-cli 的插件。")]),s._v(" "),t("h4",{attrs:{id:"构建后操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建后操作"}},[s._v("#")]),s._v(" 构建后操作")]),s._v(" "),t("p",[s._v("简单地配一下 Editable Email Notification 即可，发邮件通知，比较灵活，自由发挥。")]),s._v(" "),t("p",[s._v("最后保存，就可以开始构建了。")]),s._v(" "),t("h2",{attrs:{id:"后话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后话"}},[s._v("#")]),s._v(" 后话")]),s._v(" "),t("p",[s._v("这里我只搭建了所需要的环境，以及简单演示了 iOS 的构建配置流程，当然还需要配合 fastlane，因为 fastlane 是面向项目操作的，不是面向服务器的，所以这篇文章没有提及。我还在研究 Jenkins 参数化构建等的玩法，之后会再抽一篇文章专门来写 Android、iOS、JavaEE 等项目的持续构建。")]),s._v(" "),t("p",[s._v("对于 JavaEE、Android 来说，Java 的跨平台做得很好，构建就太简单了，用 Gradle、Maven 等就可以很轻松方便地完成构建任务。而像 iOS 的 Cocoa 根本不开源，被封闭在 Mac 这个生态里，理所应当也要找跟前者类似的工具来完成构建任务，而不是傻傻的继续用 Xcode 的插件，fastlane 就是我的选择。")]),s._v(" "),t("p",[s._v("接下来每一个项目，只需要在 Jenkins 后台管理系统中去简单地操作就行了，不需要直接操作服务器了。所以，这就是个一劳永逸的过程。")])])}),[],!1,null,null,null);a.default=r.exports}}]);