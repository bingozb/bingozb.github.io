(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{359:function(s,a,t){"use strict";t.r(a);var r=t(3),e=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("最近在摸索持续构建，正如之前的文章"),t("a",{attrs:{href:"https://blog.bingo.ren/15.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("《DKIpaBuilder shell实现自动打包ipa并上传到fir.im》"),t("OutboundLink")],1),s._v("所言，“现在我们需要一个 mac 服务器，但是租赁的价格非常昂贵。网上有人用 mac mini 来当 macOS 服务器，但是并不在外网环境，Coding、GitHub 等平台的 webHook 接收不到。”")]),s._v(" "),t("p",[s._v("于是有个想法，利用 SSH 反向隧道穿透 NAT，连接内网的 mac mini 服务器。")]),s._v(" "),t("h2",{attrs:{id:"目标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[s._v("#")]),s._v(" 目标")]),s._v(" "),t("p",[s._v("现在有位于公网的 VPS 一台，位于 NAT 之后的 Mac Mini 一台，本机 Macbook Pro 一台，分别取代号 A、B、C。")]),s._v(" "),t("p",[s._v("机器代号 | 机器位置 | 地址 | 账户 | ssh/sshd 端口 | 是否需要运行sshd\n---|---\nA | 位于公网 | bingo.ren | root | 22 | 是\nB | 位于NAT之后 | localhost | dankal | 22 | 是\nC | 位于NAT之后 | localhost | bingo | 22 | 否")]),s._v(" "),t("p",[s._v("A 上的 WebServer 为 Nginx，通过 location 配置规则，把 webhook 的请求反向代理到了 Nodejs 监听的端口 (eg. 7777)")]),s._v(" "),t("p",[s._v("目标是实现自动化部署需求：当代码提交并 Push 到 GitHub 或者 Coding 等平台时，平台往位于公网的 A 发送一个 Http Request 传递 Push Event，A 上的 nodejs 触发 shell 脚本，通过 ssh 通道连接并执行 B 上的 Shell 脚本，B 上的 Shell 脚本执行 fastlane 命令实现持续构建，自动实现单元测试、屏幕截图、打包、发布等操作。")]),s._v(" "),t("p",[s._v("所以，搞这么多，最基本的就是要穿透内网，这就是现在首先要做的事情。")]),s._v(" "),t("h2",{attrs:{id:"稳定性维持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#稳定性维持"}},[s._v("#")]),s._v(" 稳定性维持")]),s._v(" "),t("p",[s._v("不幸的是 SSH 连接是会超时关闭的，如果连接关闭，隧道无法维持，那么 A 就无法利用反向隧道穿透 B 所在的 NAT 了，所以我们需要一种方案来提供一条稳定的 SSH 反向隧道。")]),s._v(" "),t("p",[s._v("一个最简单的方法就是 "),t("code",[s._v("autossh")]),s._v("，这个软件会在超时之后自动重新建立 SSH 隧道，这样就解决了隧道的稳定性问题。")]),s._v(" "),t("h3",{attrs:{id:"安装-autossh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-autossh"}},[s._v("#")]),s._v(" 安装 autossh")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ brew install autossh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"配置公网-vps（a）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置公网-vps（a）"}},[s._v("#")]),s._v(" 配置公网 VPS（A）")]),s._v(" "),t("h3",{attrs:{id:"修改配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改配置文件"}},[s._v("#")]),s._v(" 修改配置文件")]),s._v(" "),t("p",[s._v("首先在 A 上编辑 sshd 的配置文件 sshd_config，将 GatewayPorts 开关打开")]),s._v(" "),t("div",{staticClass:"language-vim line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vim"}},[t("code",[s._v("A $ "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("vim")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("etc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("ssh"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("sshd_config\n    \t\nGatewayPorts yes\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("在 CentOS 下默认是"),t("code",[s._v("#GatewayPorts no")]),s._v("，把注释打开，然后把 no 改为 yes；")])]),s._v(" "),t("li",[t("p",[s._v("在 Ubuntu 下默认没有 GatewayPorts，直接补一行 "),t("code",[s._v("GatewayPorts yes")]),s._v(" 即可")])])]),s._v(" "),t("h3",{attrs:{id:"重启-sshd-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重启-sshd-服务"}},[s._v("#")]),s._v(" 重启 sshd 服务")]),s._v(" "),t("div",{staticClass:"language-vim line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vim"}},[t("code",[s._v("A $ service sshd restart\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"防火墙开放端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#防火墙开放端口"}},[s._v("#")]),s._v(" 防火墙开放端口")]),s._v(" "),t("p",[s._v("以 6766 和 6777 为例，可自由替换。")]),s._v(" "),t("div",{staticClass:"language-vim line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vim"}},[t("code",[s._v("B $ sudo iptables "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("I INPUT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("p")]),s._v(" tcp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("dport "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6766")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("j")]),s._v(" ACCEPT\nB $ sudo iptables "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("I INPUT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("p")]),s._v(" tcp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("dport "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6777")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("j")]),s._v(" ACCEPT\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"配置内网-mac-mini-b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置内网-mac-mini-b"}},[s._v("#")]),s._v(" 配置内网 Mac Mini (B)")]),s._v(" "),t("h3",{attrs:{id:"新建用户"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建用户"}},[s._v("#")]),s._v(" 新建用户")]),s._v(" "),t("p",[s._v("在 B 上新建一个用户 dankal，由于 macOS 是基于 Unix 系统，暂时还没有找到新建用户的命令，Linux 下可以用下面的命令新建用户。")]),s._v(" "),t("div",{staticClass:"language-vim line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vim"}},[t("code",[s._v("B $ sudo useradd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("m")]),s._v(" dankal\nB $ sudo passwd dankal\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("而在 mini 上，暂时基于 GUI 操作，系统偏好设置 -> 用户与群组 -> 点按锁按钮以进行更改 -> 添加用户账户。")]),s._v(" "),t("h3",{attrs:{id:"配置-ssh-密钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-ssh-密钥"}},[s._v("#")]),s._v(" 配置 SSH 密钥")]),s._v(" "),t("h4",{attrs:{id:"创建密钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建密钥"}},[s._v("#")]),s._v(" 创建密钥")]),s._v(" "),t("div",{staticClass:"language-vim line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vim"}},[t("code",[s._v("B $ "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("su")]),s._v(" dankal\nB $ ssh"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("keygen "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rsa'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("C "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dankal@mini'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("注意该密钥不要设置密码，也就是运行 ssh-keygen 命令时尽管一路回车，不要输入额外的字符。")]),s._v(" "),t("h4",{attrs:{id:"上传到-vps（a）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#上传到-vps（a）"}},[s._v("#")]),s._v(" 上传到 VPS（A）")]),s._v(" "),t("div",{staticClass:"language-vim line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vim"}},[t("code",[s._v("B $ ssh"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("copy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("id root@bingo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("ren\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("以往我都是 scp 上传公钥到服务器上，然后再 cat >> 写入 authorized_keys 文件。")]),s._v(" "),t("p",[s._v("这里用 ssh-copy-id 可以不传公钥，一步实现上面的操作。")]),s._v(" "),t("h3",{attrs:{id:"反向隧道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反向隧道"}},[s._v("#")]),s._v(" 反向隧道")]),s._v(" "),t("p",[s._v("由 B 向 A 主动建立一个 SSH 隧道，将 A 的 6766 端口转发到 B 的 22 端口上，只要这条隧道不关闭，这个转发就是有效的。")]),s._v(" "),t("p",[s._v("通过上面的步骤，安装完的 autossh 默认在 /usr/local/Celler/autossh 目录下，而 autossh.sh 脚本的地址为 /usr/local/Celler/autossh/1.4e/bin/autossh.sh。")]),s._v(" "),t("div",{staticClass:"language-vim line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vim"}},[t("code",[s._v("B $ "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Celler"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("autossh"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("4e"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bin")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\nB $ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("autossh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("M "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6777")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("NR "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*:6766:localhost:22'")]),s._v(" root@bingo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("ren\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("-M 参数指定的端口用来监听隧道的状态，与端口转发无关。")]),s._v(" "),t("p",[s._v("有了这个端口转发，只需要访问 A 的 6766 端口反向连接 B 即可。")]),s._v(" "),t("h2",{attrs:{id:"连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接"}},[s._v("#")]),s._v(" 连接")]),s._v(" "),t("p",[s._v("现在可以在 A 上使用这条反向隧道穿透 B 所在的 NAT，SSH 连接到 B：")]),s._v(" "),t("div",{staticClass:"language-vim line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vim"}},[t("code",[s._v("A $ ssh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6766")]),s._v(" dankal@localhost\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("或者是在 C 上直接穿透两层 NAT，SSH 连接到 B：")]),s._v(" "),t("div",{staticClass:"language-vim line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vim"}},[t("code",[s._v("C $ ssh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6766")]),s._v(" dankal@bingo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("ren\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"todo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[s._v("#")]),s._v(" TODO")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如果 B 重启隧道就会消失。那么需要有一种手段在 B 每次启动时使用 autossh 来建立 SSH 隧道。在 linux 下可以使用 systemd 做成服务来解决，在 macOS 下暂时还没有找到解决方案。")])]),s._v(" "),t("li",[t("p",[s._v("动态端口转发，在 VPS（A）安装 ShadowsocksX，SOCKS v5 代理实现访问 Mini（B）上的网页。")])])]),s._v(" "),t("h2",{attrs:{id:"后话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后话"}},[s._v("#")]),s._v(" 后话")]),s._v(" "),t("p",[s._v("实现内网穿透并不难，但对于 Linux/Unix 操作系统的使用的熟练度有一定的要求，我在 ssh、sudoers、iptables 等上面花了不少时间，也踩了挺多的坑。")])])}),[],!1,null,null,null);a.default=e.exports}}]);